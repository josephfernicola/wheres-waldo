[{"/Users/josephfernicola/the_odin_project/wheres-waldo/src/index.js":"1","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/NavBar.js":"2","/Users/josephfernicola/the_odin_project/wheres-waldo/src/RouteSwitch.js":"3","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Beach.js":"4","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Snow.js":"5","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Track.js":"6","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Space.js":"7","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Leaderboards.js":"8","/Users/josephfernicola/the_odin_project/wheres-waldo/src/Home.js":"9"},{"size":667,"mtime":1656784565966,"results":"10","hashOfConfig":"11"},{"size":6433,"mtime":1657339719108,"results":"12","hashOfConfig":"11"},{"size":1651,"mtime":1657410091521,"results":"13","hashOfConfig":"11"},{"size":8659,"mtime":1657388945600,"results":"14","hashOfConfig":"11"},{"size":8711,"mtime":1657388429184,"results":"15","hashOfConfig":"11"},{"size":8609,"mtime":1657411024631,"results":"16","hashOfConfig":"11"},{"size":8562,"mtime":1657410412174,"results":"17","hashOfConfig":"11"},{"size":7212,"mtime":1657036572881,"results":"18","hashOfConfig":"11"},{"size":1293,"mtime":1657410084052,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ugcoa3",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/josephfernicola/the_odin_project/wheres-waldo/src/index.js",[],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/NavBar.js",["53","54","55","56","57"],[],"import { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport waldo from \"../images/waldoFace.png\";\nimport odlaw from \"../images/odlawFace.png\";\nimport whitebeard from \"../images/whitebeardFace.png\";\nimport logo from \"../images/waldoHomeFace.png\";\n\nfunction NavBar(props) {\n  const { time, setTime, timerOn, setTimerOn, allowPopup, setAllowPopup } = props;\n  const [navText, setNavText] = useState(\n    <nav className=\"homeNav\">\n      <div className=\"nameLogo\">\n        <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n        <div className=\"logoWhere\">Where's</div>\n        <div className=\"logoWaldo\">Waldo?</div>\n      </div>\n    </nav>\n  );\n  let location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname !== \"/beach\" || location.pathname !== \"/space\" || location.pathname !== \"/snow\" || location.pathname !== \"/track\") {\n      setTimerOn(false);\n      setTime(0)\n    }\n  }, [location])\n\n  useEffect(() => {\n  if (location.pathname === \"/leaderboards\") {\n\n  }\n  }, [location])\n\n  const clearTimerAndResetColumns = () => {\n    setTimerOn(false);\n    setTime(0);\n    if (location.pathname === \"/beach\" || location.pathname === \"/snow\" || location.pathname === \"/space\" || location.pathname === \"/track\") {\n    const nav = document.querySelector(\".nav\");\n    nav.style.gridTemplateColumns = \"1fr 1fr 1fr 1fr\";\n  \n\n    }\n  };\n  const unBlurImage = (e) => {\n    if (location.pathname === \"/beach\") {\n    setTimerOn(true);\n    setAllowPopup(true); //allows people to click image to make guesses\n    const beachImg = document.querySelector(\".beachContainer\");\n    beachImg.children[1].className = \"beachBig\"; //removed the blur\n      const nav = document.querySelector(\".nav\");\n      nav.style.gridTemplateColumns = \"1fr 1fr .000001fr 1fr\"\n    e.target.className=\"hiddenNavBar\"\n    \n    }\n    else if (location.pathname === \"/snow\") {\n      setTimerOn(true);\n      setAllowPopup(true); //allows people to click image to make guesses\n      const snowImg = document.querySelector(\".snowContainer\").children[1]\n      snowImg.className = \"snowBig\"; //removed the blur\n      const nav = document.querySelector(\".nav\");\n      nav.style.gridTemplateColumns = \"1fr 1fr .000001fr 1fr\"\n      e.target.className=\"hiddenNavBar\";\n      }\n      else if (location.pathname === \"/track\") {\n        setTimerOn(true);\n        setAllowPopup(true); //allows people to click image to make guesses\n        const trackImg = document.querySelector(\".trackContainer\").children[1]\n        trackImg.className = \"trackBig\"; //removed the blur\n        const nav = document.querySelector(\".nav\");\n        nav.style.gridTemplateColumns = \"1fr 1fr .000001fr 1fr\"\n        e.target.className=\"hiddenNavBar\";\n        }\n        else if (location.pathname === \"/space\") {\n          setTimerOn(true);\n          setAllowPopup(true); //allows people to click image to make guesses\n          const spaceImg = document.querySelector(\".spaceContainer\").children[1]\n          spaceImg.className = \"spaceBig\"; //removed the blur\n          const nav = document.querySelector(\".nav\");\n          nav.style.gridTemplateColumns = \"1fr 1fr .000001fr 1fr\";\n          e.target.className=\"hiddenNavBar\";\n          }\n  };\n  const setNavBar = () => {\n    return (\n      <nav className=\"nav\">\n        <Link to=\"/wheres-waldo\">\n          <button className=\"returnHome\" onClick={clearTimerAndResetColumns}>\n            Return to Home\n          </button>\n        </Link>\n\n        <div className=\"characterContainer\">\n          <div className=\"waldoImageAndName\">\n            <img src={waldo} alt=\"Waldo\"></img>\n            <div>Waldo</div>\n          </div>\n          <div className=\"odlawImageAndName\">\n            <img src={odlaw} alt=\"Odlaw\"></img>\n            <div>Odlaw</div>\n          </div>\n          <div className=\"whitebeardImageAndName\">\n            <img src={whitebeard} alt=\"Whitebeard\"></img>\n            <div>Whitebeard</div>\n          </div>\n        </div>\n        <button className=\"startTimerButton\" onClick={unBlurImage}>\n          Start!\n        </button>\n        <div className=\"timer\">\n          <div className=\"minutes\">\n            {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m\n          </div>\n          <div>:</div>\n          <div className=\"seconds\">\n            {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s\n          </div>\n          <div>:</div>\n          <div className=\"milli\">{(\"0\" + ((time / 10) % 100)).slice(-2)}ms</div>\n        </div>\n      </nav>\n    );\n  };\n  useEffect(() => {\n    if (\n      location.pathname === \"/beach\" ||\n      location.pathname === \"/snow\" ||\n      location.pathname === \"/space\" ||\n      location.pathname === \"/track\"\n    ) {\n      setNavText(setNavBar);\n    }\n  }, [time, location.pathname]);\n\n  useEffect(() => {\n    if (location.pathname === \"/wheres-waldo\") {\n      setNavText(\n        <nav className=\"homeNav\">\n          <div className=\"nameLogo\">\n            <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n            <div className=\"logoWhere\">Where's</div>\n            <div className=\"logoWaldo\">Waldo?</div>\n          </div>\n        </nav>\n      );\n    } else if (location.pathname === \"/beach\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/snow\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/space\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/track\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/leaderboards\") {\n      setNavText(\n        <div className=\"leaderboardNav\">\n          <Link to=\"/wheres-waldo\">\n            <button className=\"returnHome\" onClick={clearTimerAndResetColumns}>\n              Return to Home\n            </button>\n          </Link>\n          <div className=\"nameLogo\">\n            <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n            <div className=\"logoWhere\">Where's</div>\n            <div className=\"logoWaldo\">Waldo</div>\n          </div>\n        </div>\n      );\n    }\n  }, [location]);\n\n  useEffect(() => {\n    let interval = null;\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [timerOn]);\n\n  return <nav className=\"navText\">{navText}</nav>;\n}\n\nexport default NavBar;\n",[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/RouteSwitch.js",[],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Beach.js",["58","59","60","61","62"],[],"import beach from \"../images/waldo-beach.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\n\nfunction Beach(props) {\n  const { time, setTimerOn, allowPopup, setAllowPopup } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 909 &&\n        circleCoordinates[0].left > 871 &&\n        circleCoordinates[1].top < 371 &&\n        circleCoordinates[1].top > 326\n      ) {\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 177 &&\n        circleCoordinates[0].left > 135 &&\n        circleCoordinates[1].top < 351 &&\n        circleCoordinates[1].top > 307\n      ) {\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 408 &&\n        circleCoordinates[0].left > 370 &&\n        circleCoordinates[1].top < 351 &&\n        circleCoordinates[1].top > 310\n      ) {\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n      }\n    }\n  }, [validateWhitebeard]);\n\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      const beachPic = document.querySelector(\".beachBig\");\n      beachPic.className = \"beachBig blur fitScreen\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addBeachScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                maxLength=\"30\"\n              ></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n\n            <Link to=\"/leaderboards\">\n              <button className=\"leaderboardButton\">View Leaderboards</button>\n            </Link>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound, setTimerOn, time]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"beachScores\");\n    if (e.target.children[1].value.length > 0) {\n      addDoc(scoreRef, {\n        name: e.target.children[1].value,\n        time:\n          (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n          \"m : \" +\n          (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n          \"s : \" +\n          (\"0\" + ((time / 10) % 100)).slice(-2) +\n          \"ms\",\n      });\n      navigate(\"/leaderboards\");\n    }\n  };\n\n  return (\n    <div className=\"beachContainer\">\n      <div>{winnerModal}</div>\n      <div className={\"beachBig blur\"} onClick={popUpScreen}>\n        {popupText}\n        {circle}\n        <img src={beach} alt=\"Beach\"></img>\n      </div>\n    </div>\n  );\n}\n\nexport default Beach;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Snow.js",["63","64","65","66","67","68","69","70"],[],"import snow from \"../images/waldo-snow.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\n\nfunction Snow(props) {\n  const { time, setTime, timerOn, setTimerOn, allowPopup, setAllowPopup } =\n    props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 1250 &&\n        circleCoordinates[0].left > 1213 &&\n        circleCoordinates[1].top < 681 &&\n        circleCoordinates[1].top > 641\n      ) {\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 477 &&\n        circleCoordinates[0].left > 439 &&\n        circleCoordinates[1].top < 598 &&\n        circleCoordinates[1].top > 563\n      ) {\n\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 121 &&\n        circleCoordinates[0].left > 82 &&\n        circleCoordinates[1].top < 712 &&\n        circleCoordinates[1].top > 672\n      ) {\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n      } \n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      const snowPic = document.querySelector(\".snowBig\");\n      snowPic.className = \"snowBig blur fitScreen\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addSnowScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                maxLength=\"30\"\n              ></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n   \n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"snowScores\");\n    if (e.target.children[1].value.length > 0) {\n      addDoc(scoreRef, {\n        name: e.target.children[1].value,\n        time:\n          (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n          \"m : \" +\n          (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n          \"s : \" +\n          (\"0\" + ((time / 10) % 100)).slice(-2) +\n          \"ms\",\n      });\n      navigate(\"/leaderboards\");\n    }\n  };\n  const refreshPage = () => {\n    navigate(0);\n  };\n  return (\n    <div className=\"snowContainer\">\n      <div>{winnerModal}</div>\n      <div className={\"snowBig blur\"} onClick={popUpScreen}>\n        {popupText}\n        {circle}\n        <img src={snow} alt=\"Snow\"></img>\n      </div>\n    </div>\n  );\n}\n\nexport default Snow;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Track.js",["71","72","73","74","75","76","77","78"],[],"import track from \"../images/waldo-track.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n} from \"firebase/firestore\";\n\nfunction Track (props) {\n  const { time, setTime, timerOn, setTimerOn, allowPopup, setAllowPopup } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 424 &&\n        circleCoordinates[0].left > 385 &&\n        circleCoordinates[1].top < 322 &&\n        circleCoordinates[1].top > 283\n      ) {\n\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n      } \n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 885 &&\n        circleCoordinates[0].left > 844 &&\n        circleCoordinates[1].top < 603 &&\n        circleCoordinates[1].top > 565\n      ) {\n\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n      } \n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 905 &&\n        circleCoordinates[0].left > 864 &&\n        circleCoordinates[1].top < 801 &&\n        circleCoordinates[1].top > 766\n      ) {\n\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n      }\n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      const spacePic = document.querySelector(\".trackBig\");\n      spacePic.className = \"trackBig blur fitScreen\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addTrackScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" maxLength=\"30\"></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"trackScores\");\n    if (e.target.children[1].value.length > 0) {\n    addDoc(scoreRef, {\n      name: e.target.children[1].value,\n      time:\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n        \"m : \" +\n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n        \"s : \" +\n        (\"0\" + ((time / 10) % 100)).slice(-2) +\n        \"ms\",\n    });\n    navigate(\"/leaderboards\");\n  }\n  };\n  const refreshPage = () => {\n    navigate(0);\n  };\n  return (\n    <div className=\"trackContainer\">\n    <div>{winnerModal}</div>\n    <div className={\"trackBig blur\"} onClick={popUpScreen}>\n      {popupText}\n      {circle}\n      <img src={track} alt=\"Track\"></img>\n    </div>\n  </div>\n  );\n}\nexport default Track;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Space.js",["79","80","81","82","83","84","85"],[],"import space from \"../images/waldo-space.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n} from \"firebase/firestore\";\n\nfunction Space (props) {\n  const { time, setTime, timerOn, setTimerOn, allowPopup, setAllowPopup } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 605 &&\n        circleCoordinates[0].left > 561 &&\n        circleCoordinates[1].top < 611 &&\n        circleCoordinates[1].top > 571\n      ) {\n\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 122 &&\n        circleCoordinates[0].left > 81 &&\n        circleCoordinates[1].top < 673 &&\n        circleCoordinates[1].top > 634\n      ) {\n \n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 1145 &&\n        circleCoordinates[0].left > 1106 &&\n        circleCoordinates[1].top < 568 &&\n        circleCoordinates[1].top > 529\n      ) {\n\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n      }\n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      const spacePic = document.querySelector(\".spaceBig\");\n      spacePic.className = \"spaceBig blur fitScreen\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addSpaceScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" maxLength=\"30\"></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"spaceScores\");\n    if (e.target.children[1].value.length > 0) {\n    addDoc(scoreRef, {\n      name: e.target.children[1].value,\n      time:\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n        \"m : \" +\n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n        \"s : \" +\n        (\"0\" + ((time / 10) % 100)).slice(-2) +\n        \"ms\",\n    });\n    navigate(\"/leaderboards\");\n  }\n  };\n\n  return (\n    <div className=\"spaceContainer\">\n    <div>{winnerModal}</div>\n    <div className={\"spaceBig blur\"} onClick={popUpScreen}>\n      {popupText}\n      {circle}\n      <img src={space} alt=\"Space\"></img>\n    </div>\n  </div>\n  );\n}\n\nexport default Space;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Leaderboards.js",[],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/Home.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":10,"column":47,"nodeType":"88","messageId":"89","endLine":10,"endColumn":57},{"ruleId":"90","severity":1,"message":"91","line":27,"column":6,"nodeType":"92","endLine":27,"endColumn":16,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":133,"column":6,"nodeType":"92","endLine":133,"endColumn":31,"suggestions":"95"},{"ruleId":"90","severity":1,"message":"96","line":170,"column":6,"nodeType":"92","endLine":170,"endColumn":16,"suggestions":"97"},{"ruleId":"90","severity":1,"message":"98","line":184,"column":6,"nodeType":"92","endLine":184,"endColumn":15,"suggestions":"99"},{"ruleId":"86","severity":1,"message":"100","line":19,"column":7,"nodeType":"88","messageId":"89","endLine":19,"endColumn":15},{"ruleId":"90","severity":1,"message":"101","line":153,"column":6,"nodeType":"92","endLine":153,"endColumn":21,"suggestions":"102"},{"ruleId":"90","severity":1,"message":"101","line":169,"column":6,"nodeType":"92","endLine":169,"endColumn":21,"suggestions":"103"},{"ruleId":"90","severity":1,"message":"101","line":186,"column":6,"nodeType":"92","endLine":186,"endColumn":26,"suggestions":"104"},{"ruleId":"90","severity":1,"message":"105","line":226,"column":6,"nodeType":"92","endLine":226,"endColumn":65,"suggestions":"106"},{"ruleId":"86","severity":1,"message":"107","line":7,"column":17,"nodeType":"88","messageId":"89","endLine":7,"endColumn":24},{"ruleId":"86","severity":1,"message":"108","line":7,"column":26,"nodeType":"88","messageId":"89","endLine":7,"endColumn":33},{"ruleId":"86","severity":1,"message":"100","line":20,"column":7,"nodeType":"88","messageId":"89","endLine":20,"endColumn":15},{"ruleId":"90","severity":1,"message":"101","line":37,"column":6,"nodeType":"92","endLine":37,"endColumn":21,"suggestions":"109"},{"ruleId":"90","severity":1,"message":"101","line":54,"column":6,"nodeType":"92","endLine":54,"endColumn":21,"suggestions":"110"},{"ruleId":"90","severity":1,"message":"101","line":71,"column":6,"nodeType":"92","endLine":71,"endColumn":26,"suggestions":"111"},{"ruleId":"90","severity":1,"message":"112","line":227,"column":6,"nodeType":"92","endLine":227,"endColumn":47,"suggestions":"113"},{"ruleId":"86","severity":1,"message":"114","line":247,"column":9,"nodeType":"88","messageId":"89","endLine":247,"endColumn":20},{"ruleId":"86","severity":1,"message":"107","line":11,"column":17,"nodeType":"88","messageId":"89","endLine":11,"endColumn":24},{"ruleId":"86","severity":1,"message":"108","line":11,"column":26,"nodeType":"88","messageId":"89","endLine":11,"endColumn":33},{"ruleId":"86","severity":1,"message":"100","line":23,"column":7,"nodeType":"88","messageId":"89","endLine":23,"endColumn":15},{"ruleId":"90","severity":1,"message":"101","line":40,"column":6,"nodeType":"92","endLine":40,"endColumn":21,"suggestions":"115"},{"ruleId":"90","severity":1,"message":"101","line":57,"column":6,"nodeType":"92","endLine":57,"endColumn":21,"suggestions":"116"},{"ruleId":"90","severity":1,"message":"101","line":75,"column":6,"nodeType":"92","endLine":75,"endColumn":26,"suggestions":"117"},{"ruleId":"90","severity":1,"message":"112","line":226,"column":6,"nodeType":"92","endLine":226,"endColumn":47,"suggestions":"118"},{"ruleId":"86","severity":1,"message":"114","line":246,"column":9,"nodeType":"88","messageId":"89","endLine":246,"endColumn":20},{"ruleId":"86","severity":1,"message":"107","line":11,"column":17,"nodeType":"88","messageId":"89","endLine":11,"endColumn":24},{"ruleId":"86","severity":1,"message":"108","line":11,"column":26,"nodeType":"88","messageId":"89","endLine":11,"endColumn":33},{"ruleId":"86","severity":1,"message":"100","line":23,"column":7,"nodeType":"88","messageId":"89","endLine":23,"endColumn":15},{"ruleId":"90","severity":1,"message":"101","line":42,"column":6,"nodeType":"92","endLine":42,"endColumn":21,"suggestions":"119"},{"ruleId":"90","severity":1,"message":"101","line":60,"column":6,"nodeType":"92","endLine":60,"endColumn":21,"suggestions":"120"},{"ruleId":"90","severity":1,"message":"101","line":79,"column":6,"nodeType":"92","endLine":79,"endColumn":26,"suggestions":"121"},{"ruleId":"90","severity":1,"message":"112","line":229,"column":6,"nodeType":"92","endLine":229,"endColumn":47,"suggestions":"122"},"no-unused-vars","'allowPopup' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setTime' and 'setTimerOn'. Either include them or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'setNavBar'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'clearTimerAndResetColumns' and 'setNavBar'. Either include them or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'setTime'. Either include it or remove the dependency array.",["126"],"'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'circleCoordinates'. Either include it or remove the dependency array.",["127"],["128"],["129"],"React Hook useEffect has missing dependencies: 'addScore' and 'setAllowPopup'. Either include them or remove the dependency array.",["130"],"'setTime' is assigned a value but never used.","'timerOn' is assigned a value but never used.",["131"],["132"],["133"],"React Hook useEffect has missing dependencies: 'addScore', 'setAllowPopup', 'setTimerOn', and 'time'. Either include them or remove the dependency array.",["134"],"'refreshPage' is assigned a value but never used.",["135"],["136"],["137"],["138"],["139"],["140"],["141"],["142"],{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"151","fix":"159"},{"desc":"153","fix":"160"},{"desc":"155","fix":"161"},{"desc":"162","fix":"163"},{"desc":"151","fix":"164"},{"desc":"153","fix":"165"},{"desc":"155","fix":"166"},{"desc":"162","fix":"167"},{"desc":"151","fix":"168"},{"desc":"153","fix":"169"},{"desc":"155","fix":"170"},{"desc":"162","fix":"171"},"Update the dependencies array to be: [location, setTime, setTimerOn]",{"range":"172","text":"173"},"Update the dependencies array to be: [time, location.pathname, setNavBar]",{"range":"174","text":"175"},"Update the dependencies array to be: [clearTimerAndResetColumns, location, setNavBar]",{"range":"176","text":"177"},"Update the dependencies array to be: [setTime, timerOn]",{"range":"178","text":"179"},"Update the dependencies array to be: [circleCoordinates, validateWaldo]",{"range":"180","text":"181"},"Update the dependencies array to be: [circleCoordinates, validateOdlaw]",{"range":"182","text":"183"},"Update the dependencies array to be: [circleCoordinates, validateWhitebeard]",{"range":"184","text":"185"},"Update the dependencies array to be: [odlawFound, waldoFound, whitebeardFound, setTimerOn, time, setAllowPopup, addScore]",{"range":"186","text":"187"},{"range":"188","text":"181"},{"range":"189","text":"183"},{"range":"190","text":"185"},"Update the dependencies array to be: [addScore, odlawFound, setAllowPopup, setTimerOn, time, waldoFound, whitebeardFound]",{"range":"191","text":"192"},{"range":"193","text":"181"},{"range":"194","text":"183"},{"range":"195","text":"185"},{"range":"196","text":"192"},{"range":"197","text":"181"},{"range":"198","text":"183"},{"range":"199","text":"185"},{"range":"200","text":"192"},[981,991],"[location, setTime, setTimerOn]",[4781,4806],"[time, location.pathname, setNavBar]",[6056,6066],"[clearTimerAndResetColumns, location, setNavBar]",[6343,6352],"[setTime, timerOn]",[5485,5500],"[circleCoordinates, validateWaldo]",[5934,5949],"[circleCoordinates, validateOdlaw]",[6413,6433],"[circleCoordinates, validateWhitebeard]",[7759,7818],"[odlawFound, waldoFound, whitebeardFound, setTimerOn, time, setAllowPopup, addScore]",[1465,1480],[1915,1930],[2394,2414],[7784,7825],"[addScore, odlawFound, setAllowPopup, setTimerOn, time, waldoFound, whitebeardFound]",[1471,1486],[1922,1937],[2402,2422],[7715,7756],[1472,1487],[1923,1938],[2406,2426],[7718,7759]]