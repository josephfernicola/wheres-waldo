[{"/Users/josephfernicola/the_odin_project/wheres-waldo/src/index.js":"1","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/NavBar.js":"2","/Users/josephfernicola/the_odin_project/wheres-waldo/src/RouteSwitch.js":"3","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Beach.js":"4","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Snow.js":"5","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Track.js":"6","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Space.js":"7","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Leaderboards.js":"8","/Users/josephfernicola/the_odin_project/wheres-waldo/src/Home.js":"9"},{"size":667,"mtime":1656784565966,"results":"10","hashOfConfig":"11"},{"size":5274,"mtime":1658413421817,"results":"12","hashOfConfig":"11"},{"size":3624,"mtime":1669419912146,"results":"13","hashOfConfig":"11"},{"size":10453,"mtime":1665683160106,"results":"14","hashOfConfig":"11"},{"size":9907,"mtime":1658375494227,"results":"15","hashOfConfig":"11"},{"size":9801,"mtime":1658375497552,"results":"16","hashOfConfig":"11"},{"size":9812,"mtime":1658375488133,"results":"17","hashOfConfig":"11"},{"size":7224,"mtime":1678036895760,"results":"18","hashOfConfig":"11"},{"size":1293,"mtime":1657410084052,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ugcoa3",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/josephfernicola/the_odin_project/wheres-waldo/src/index.js",[],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/NavBar.js",["51","52","53","54","55","56"],[],"import { Link, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport waldo from \"../images/waldoFace.png\";\nimport odlaw from \"../images/odlawFace.png\";\nimport whitebeard from \"../images/whitebeardFace.png\";\nimport logo from \"../images/waldoHomeFace.png\";\n\nfunction NavBar(props) {\n  const {\n    time,\n    setTime,\n    timerOn,\n    setTimerOn,\n    allowPopup,\n    setAllowPopup,\n    startButtonAndNotificationText,\n    setStartButtonAndNotificationText,\n  } = props;\n  const [navText, setNavText] = useState(\n    <nav className=\"homeNav\">\n      <div className=\"nameLogo\">\n        <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n        <div className=\"logoWhere\">Where's</div>\n        <div className=\"logoWaldo\">Waldo?</div>\n      </div>\n    </nav>\n  );\n\n  const unBlurImage = (e) => {\n    setTimerOn(true);\n    setAllowPopup(true); //allows people to click image to make guesses\n    setStartButtonAndNotificationText(\"\");\n    const mapContainer = document.querySelector(\".mapContainer\");\n    mapContainer.children[1].className = \"mapBig\"; //remove the blur\n  };\n\n  let location = useLocation();\n\n  useEffect(() => {\n    if (\n      location.pathname !== \"/beach\" ||\n      location.pathname !== \"/space\" ||\n      location.pathname !== \"/snow\" ||\n      location.pathname !== \"/track\"\n    ) {\n      setTimerOn(false);\n      setTime(0);\n    }\n  }, [location]);\n\n  useEffect(() => { //reset the start button times anytime the user changes pages\n    setStartButtonAndNotificationText(\n      <button className=\"startTimerButton\" onClick={unBlurImage}>\n        Start!\n      </button>\n    );\n  }, [location]);\n\n  const clearTimerAndResetColumns = () => {\n    setTimerOn(false);\n    setTime(0);\n    if (\n      location.pathname === \"/beach\" ||\n      location.pathname === \"/snow\" ||\n      location.pathname === \"/space\" ||\n      location.pathname === \"/track\"\n    ) {\n      const nav = document.querySelector(\".nav\");\n      nav.style.gridTemplateColumns = \"1fr 1fr 1fr 1fr\";\n      setAllowPopup(false);\n      //setStartButtonAndNotificationText()\n    }\n  };\n\n  const setNavBar = () => {\n    return (\n      <nav className=\"nav\">\n        <Link to=\"/wheres-waldo\">\n          <button className=\"returnHome\" onClick={clearTimerAndResetColumns}>\n            Return to Home\n          </button>\n        </Link>\n\n        <div className=\"characterContainer\">\n          <div className=\"waldoImageAndName\">\n            <img src={waldo} alt=\"Waldo\"></img>\n            <div>Waldo</div>\n          </div>\n          <div className=\"odlawImageAndName\">\n            <img src={odlaw} alt=\"Odlaw\"></img>\n            <div>Odlaw</div>\n          </div>\n          <div className=\"whitebeardImageAndName\">\n            <img src={whitebeard} alt=\"Whitebeard\"></img>\n            <div>Whitebeard</div>\n          </div>\n        </div>\n        <div className=\"startButtonAndNotificationText\">\n          {startButtonAndNotificationText}\n        </div>\n\n        <div className=\"timer\">\n          <div className=\"minutes\">\n            {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m\n          </div>\n          <div>:</div>\n          <div className=\"seconds\">\n            {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s\n          </div>\n          <div>:</div>\n          <div className=\"milli\">{(\"0\" + ((time / 10) % 100)).slice(-2)}ms</div>\n        </div>\n      </nav>\n    );\n  };\n  useEffect(() => {\n    if (\n      location.pathname === \"/beach\" ||\n      location.pathname === \"/snow\" ||\n      location.pathname === \"/space\" ||\n      location.pathname === \"/track\"\n    ) {\n      setNavText(setNavBar);\n    }\n  }, [time, location.pathname]);\n\n  useEffect(() => {\n    if (location.pathname === \"/wheres-waldo\") {\n      setNavText(\n        <nav className=\"homeNav\">\n          <div className=\"nameLogo\">\n            <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n            <div className=\"logoWhere\">Where's</div>\n            <div className=\"logoWaldo\">Waldo?</div>\n          </div>\n        </nav>\n      );\n    } else if (location.pathname === \"/beach\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/snow\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/space\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/track\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/leaderboards\") {\n      setNavText(\n        <div className=\"leaderboardNav\">\n          <Link to=\"/wheres-waldo\">\n            <button className=\"returnHome\" onClick={clearTimerAndResetColumns}>\n              Return to Home\n            </button>\n          </Link>\n          <div className=\"nameLogo\">\n            <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n            <div className=\"logoWhere\">Where's</div>\n            <div className=\"logoWaldo\">Waldo</div>\n          </div>\n        </div>\n      );\n    }\n  }, [location]);\n\n  useEffect(() => {\n    let interval = null;\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [timerOn]);\n\n  return <nav className=\"navText\">{navText}</nav>;\n}\n\nexport default NavBar;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/RouteSwitch.js",["57"],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Beach.js",["58","59","60","61","62","63","64","65"],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Snow.js",["66","67","68","69","70","71","72","73","74"],[],"import snow from \"../images/waldo-snow.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\n\nfunction Snow(props) {\n  const { time, setTime, timerOn, setTimerOn, allowPopup, setAllowPopup, setStartButtonAndNotificationText, startButtonAndNotificationText } =\n    props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 1250 &&\n        circleCoordinates[0].left > 1213 &&\n        circleCoordinates[1].top < 681 &&\n        circleCoordinates[1].top > 641\n      ) {\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Waldo!</div>\n        );\n      } else {\n      setStartButtonAndNotificationText(\n        <div className=\"wrongGuess\">Try Again!</div>\n      );\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 477 &&\n        circleCoordinates[0].left > 439 &&\n        circleCoordinates[1].top < 598 &&\n        circleCoordinates[1].top > 563\n      ) {\n\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Odlaw!</div>\n        );\n      }\n      else {\n        setStartButtonAndNotificationText(\n          <div className=\"wrongGuess\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 121 &&\n        circleCoordinates[0].left > 82 &&\n        circleCoordinates[1].top < 712 &&\n        circleCoordinates[1].top > 672\n      ) {\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Whitebeard!</div>\n        );\n      } else {\n        setStartButtonAndNotificationText(\n          <div className=\"wrongGuess\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      setStartButtonAndNotificationText(\"\");\n      const snowPic = document.querySelector(\".mapBig\");\n      snowPic.className = \"mapBig blur fitScreen\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addSnowScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                maxLength=\"30\"\n              ></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n   \n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"snowScores\");\n    if (e.target.children[1].value.length > 0) {\n      addDoc(scoreRef, {\n        name: e.target.children[1].value,\n        time:\n          (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n          \"m : \" +\n          (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n          \"s : \" +\n          (\"0\" + ((time / 10) % 100)).slice(-2) +\n          \"ms\",\n      });\n      navigate(\"/leaderboards\");\n    }\n  };\n  useEffect(() => {\n    const winnerModal = document.querySelector(\".winnerModalContainer\");\n    const navStartButtonAndNotificationText = document.querySelector(\".startButtonAndNotificationText\");\n    if (winnerModal) {\n      if (winnerModal.firstChild) {\n        setStartButtonAndNotificationText(\"\");\n        navStartButtonAndNotificationText.firstChild.textContent = \"\"\n      }\n    }\n  }, [winnerModal, setWinnerModal])\n\n  return (\n    <div className=\"mapContainer\">\n      <div>{winnerModal}</div>\n      <div className={\"mapBig blur\"} onClick={popUpScreen}>\n        {popupText}\n        {circle}\n        <img src={snow} alt=\"Snow\"></img>\n      </div>\n    </div>\n  );\n}\n\nexport default Snow;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Track.js",["75","76","77","78","79","80","81","82","83"],[],"import track from \"../images/waldo-track.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n} from \"firebase/firestore\";\n\nfunction Track (props) {\n  const { time, setTime, timerOn, setTimerOn, allowPopup, setAllowPopup, setStartButtonAndNotificationText, startButtonAndNotificationText } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 424 &&\n        circleCoordinates[0].left > 385 &&\n        circleCoordinates[1].top < 322 &&\n        circleCoordinates[1].top > 283\n      ) {\n\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Waldo!</div>\n        );\n      }  else {\n        setStartButtonAndNotificationText(\n          <div className=\"wrongGuess\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 885 &&\n        circleCoordinates[0].left > 844 &&\n        circleCoordinates[1].top < 603 &&\n        circleCoordinates[1].top > 565\n      ) {\n\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Odlaw!</div>\n        );\n      } else {\n        setStartButtonAndNotificationText(\n          <div className=\"wrongGuess\">Try Again</div>\n        );\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 905 &&\n        circleCoordinates[0].left > 864 &&\n        circleCoordinates[1].top < 801 &&\n        circleCoordinates[1].top > 766\n      ) {\n\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Whitebeard!</div>\n        );\n      } else {\n        setStartButtonAndNotificationText(\n          <div className=\"wrongGuess\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      setStartButtonAndNotificationText(\"\");\n      const spacePic = document.querySelector(\".mapBig\");\n      spacePic.className = \"mapBig blur fitScreen\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addTrackScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" maxLength=\"30\"></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"trackScores\");\n    if (e.target.children[1].value.length > 0) {\n    addDoc(scoreRef, {\n      name: e.target.children[1].value,\n      time:\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n        \"m : \" +\n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n        \"s : \" +\n        (\"0\" + ((time / 10) % 100)).slice(-2) +\n        \"ms\",\n    });\n    navigate(\"/leaderboards\");\n  }\n  };\n  useEffect(() => {\n    const winnerModal = document.querySelector(\".winnerModalContainer\");\n    const navStartButtonAndNotificationText = document.querySelector(\".startButtonAndNotificationText\");\n    if (winnerModal) {\n      if (winnerModal.firstChild) {\n        setStartButtonAndNotificationText(\"\");\n        navStartButtonAndNotificationText.firstChild.textContent = \"\"\n      }\n    }\n  }, [winnerModal, setWinnerModal])\n \n  return (\n    <div className=\"mapContainer\">\n    <div>{winnerModal}</div>\n    <div className={\"mapBig blur\"} onClick={popUpScreen}>\n      {popupText}\n      {circle}\n      <img src={track} alt=\"Track\"></img>\n    </div>\n  </div>\n  );\n}\nexport default Track;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Space.js",["84","85","86","87","88","89","90","91","92"],[],"import space from \"../images/waldo-space.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n} from \"firebase/firestore\";\n\nfunction Space (props) {\n  const { time, setTime, timerOn, setTimerOn, allowPopup, setAllowPopup, setStartButtonAndNotificationText, startButtonAndNotificationText } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 605 &&\n        circleCoordinates[0].left > 561 &&\n        circleCoordinates[1].top < 611 &&\n        circleCoordinates[1].top > 571\n      ) {\n\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Waldo!</div>\n        );\n      } else {\n        setStartButtonAndNotificationText(\n          <div className=\"wrongGuess\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 122 &&\n        circleCoordinates[0].left > 81 &&\n        circleCoordinates[1].top < 673 &&\n        circleCoordinates[1].top > 634\n      ) {\n \n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Odlaw!</div>\n        );\n      } else {\n        setStartButtonAndNotificationText(\n          <div className=\"wrongGuess\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 1145 &&\n        circleCoordinates[0].left > 1106 &&\n        circleCoordinates[1].top < 568 &&\n        circleCoordinates[1].top > 529\n      ) {\n\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n        setStartButtonAndNotificationText(\n          <div className=\"correctGuess\">Found Whitebeard!</div>\n        );\n      }\n      else {\n        setStartButtonAndNotificationText(\n          <div className=\"wrongGuess\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      setStartButtonAndNotificationText(\"\");\n      const spacePic = document.querySelector(\".mapBig\");\n      spacePic.className = \"mapBig blur fitScreen\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addSpaceScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" maxLength=\"30\"></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"spaceScores\");\n    if (e.target.children[1].value.length > 0) {\n    addDoc(scoreRef, {\n      name: e.target.children[1].value,\n      time:\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n        \"m : \" +\n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n        \"s : \" +\n        (\"0\" + ((time / 10) % 100)).slice(-2) +\n        \"ms\",\n    });\n    navigate(\"/leaderboards\");\n  }\n  };\n  useEffect(() => {\n    const winnerModal = document.querySelector(\".winnerModalContainer\");\n    const navStartButtonAndNotificationText = document.querySelector(\".startButtonAndNotificationText\");\n    if (winnerModal) {\n      if (winnerModal.firstChild) {\n        setStartButtonAndNotificationText(\"\");\n        navStartButtonAndNotificationText.firstChild.textContent = \"\"\n      }\n    }\n  }, [winnerModal, setWinnerModal])\n\n  return (\n    <div className=\"mapContainer\">\n    <div>{winnerModal}</div>\n    <div className={\"mapBig blur\"} onClick={popUpScreen}>\n      {popupText}\n      {circle}\n      <img src={space} alt=\"Space\"></img>\n    </div>\n  </div>\n  );\n}\n\nexport default Space;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Leaderboards.js",[],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/Home.js",[],[],{"ruleId":"93","severity":1,"message":"94","line":14,"column":5,"nodeType":"95","messageId":"96","endLine":14,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":49,"column":6,"nodeType":"99","endLine":49,"endColumn":16,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":57,"column":6,"nodeType":"99","endLine":57,"endColumn":16,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":125,"column":6,"nodeType":"99","endLine":125,"endColumn":31,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":162,"column":6,"nodeType":"99","endLine":162,"endColumn":16,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"107","line":176,"column":6,"nodeType":"99","endLine":176,"endColumn":15,"suggestions":"108"},{"ruleId":"93","severity":1,"message":"109","line":3,"column":27,"nodeType":"95","messageId":"96","endLine":3,"endColumn":36},{"ruleId":"93","severity":1,"message":"110","line":12,"column":5,"nodeType":"95","messageId":"96","endLine":12,"endColumn":35},{"ruleId":"93","severity":1,"message":"111","line":26,"column":7,"nodeType":"95","messageId":"96","endLine":26,"endColumn":15},{"ruleId":"97","severity":1,"message":"101","line":43,"column":6,"nodeType":"99","endLine":43,"endColumn":8,"suggestions":"112"},{"ruleId":"97","severity":1,"message":"113","line":184,"column":6,"nodeType":"99","endLine":184,"endColumn":21,"suggestions":"114"},{"ruleId":"97","severity":1,"message":"113","line":208,"column":6,"nodeType":"99","endLine":208,"endColumn":21,"suggestions":"115"},{"ruleId":"97","severity":1,"message":"113","line":233,"column":6,"nodeType":"99","endLine":233,"endColumn":26,"suggestions":"116"},{"ruleId":"97","severity":1,"message":"117","line":276,"column":6,"nodeType":"99","endLine":276,"endColumn":65,"suggestions":"118"},{"ruleId":"97","severity":1,"message":"119","line":306,"column":6,"nodeType":"99","endLine":306,"endColumn":35,"suggestions":"120"},{"ruleId":"93","severity":1,"message":"121","line":7,"column":17,"nodeType":"95","messageId":"96","endLine":7,"endColumn":24},{"ruleId":"93","severity":1,"message":"122","line":7,"column":26,"nodeType":"95","messageId":"96","endLine":7,"endColumn":33},{"ruleId":"93","severity":1,"message":"110","line":7,"column":109,"nodeType":"95","messageId":"96","endLine":7,"endColumn":139},{"ruleId":"93","severity":1,"message":"111","line":20,"column":7,"nodeType":"95","messageId":"96","endLine":20,"endColumn":15},{"ruleId":"97","severity":1,"message":"113","line":44,"column":6,"nodeType":"99","endLine":44,"endColumn":21,"suggestions":"123"},{"ruleId":"97","severity":1,"message":"113","line":69,"column":6,"nodeType":"99","endLine":69,"endColumn":21,"suggestions":"124"},{"ruleId":"97","severity":1,"message":"113","line":93,"column":6,"nodeType":"99","endLine":93,"endColumn":26,"suggestions":"125"},{"ruleId":"97","severity":1,"message":"126","line":250,"column":6,"nodeType":"99","endLine":250,"endColumn":47,"suggestions":"127"},{"ruleId":"97","severity":1,"message":"119","line":279,"column":6,"nodeType":"99","endLine":279,"endColumn":35,"suggestions":"128"},{"ruleId":"93","severity":1,"message":"121","line":11,"column":17,"nodeType":"95","messageId":"96","endLine":11,"endColumn":24},{"ruleId":"93","severity":1,"message":"122","line":11,"column":26,"nodeType":"95","messageId":"96","endLine":11,"endColumn":33},{"ruleId":"93","severity":1,"message":"110","line":11,"column":109,"nodeType":"95","messageId":"96","endLine":11,"endColumn":139},{"ruleId":"93","severity":1,"message":"111","line":23,"column":7,"nodeType":"95","messageId":"96","endLine":23,"endColumn":15},{"ruleId":"97","severity":1,"message":"113","line":47,"column":6,"nodeType":"99","endLine":47,"endColumn":21,"suggestions":"129"},{"ruleId":"97","severity":1,"message":"113","line":71,"column":6,"nodeType":"99","endLine":71,"endColumn":21,"suggestions":"130"},{"ruleId":"97","severity":1,"message":"113","line":96,"column":6,"nodeType":"99","endLine":96,"endColumn":26,"suggestions":"131"},{"ruleId":"97","severity":1,"message":"126","line":248,"column":6,"nodeType":"99","endLine":248,"endColumn":47,"suggestions":"132"},{"ruleId":"97","severity":1,"message":"119","line":277,"column":6,"nodeType":"99","endLine":277,"endColumn":35,"suggestions":"133"},{"ruleId":"93","severity":1,"message":"121","line":11,"column":17,"nodeType":"95","messageId":"96","endLine":11,"endColumn":24},{"ruleId":"93","severity":1,"message":"122","line":11,"column":26,"nodeType":"95","messageId":"96","endLine":11,"endColumn":33},{"ruleId":"93","severity":1,"message":"110","line":11,"column":109,"nodeType":"95","messageId":"96","endLine":11,"endColumn":139},{"ruleId":"93","severity":1,"message":"111","line":23,"column":7,"nodeType":"95","messageId":"96","endLine":23,"endColumn":15},{"ruleId":"97","severity":1,"message":"113","line":49,"column":6,"nodeType":"99","endLine":49,"endColumn":21,"suggestions":"134"},{"ruleId":"97","severity":1,"message":"113","line":74,"column":6,"nodeType":"99","endLine":74,"endColumn":21,"suggestions":"135"},{"ruleId":"97","severity":1,"message":"113","line":101,"column":6,"nodeType":"99","endLine":101,"endColumn":26,"suggestions":"136"},{"ruleId":"97","severity":1,"message":"126","line":252,"column":6,"nodeType":"99","endLine":252,"endColumn":47,"suggestions":"137"},{"ruleId":"97","severity":1,"message":"119","line":281,"column":6,"nodeType":"99","endLine":281,"endColumn":35,"suggestions":"138"},"no-unused-vars","'allowPopup' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setTime' and 'setTimerOn'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'setStartButtonAndNotificationText' and 'unBlurImage'. Either include them or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'setNavBar'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'clearTimerAndResetColumns' and 'setNavBar'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'setTime'. Either include it or remove the dependency array.",["143"],"'useEffect' is defined but never used.","'startButtonAndNotificationText' is assigned a value but never used.","'location' is assigned a value but never used.",["144"],"React Hook useEffect has missing dependencies: 'circleCoordinates' and 'setStartButtonAndNotificationText'. Either include them or remove the dependency array.",["145"],["146"],["147"],"React Hook useEffect has missing dependencies: 'addScore', 'setAllowPopup', and 'setStartButtonAndNotificationText'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'setStartButtonAndNotificationText'. Either include it or remove the dependency array.",["149"],"'setTime' is assigned a value but never used.","'timerOn' is assigned a value but never used.",["150"],["151"],["152"],"React Hook useEffect has missing dependencies: 'addScore', 'setAllowPopup', 'setStartButtonAndNotificationText', 'setTimerOn', and 'time'. Either include them or remove the dependency array.",["153"],["154"],["155"],["156"],["157"],["158"],["159"],["160"],["161"],["162"],["163"],["164"],{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"177","fix":"187"},{"desc":"179","fix":"188"},{"desc":"181","fix":"189"},{"desc":"190","fix":"191"},{"desc":"185","fix":"192"},{"desc":"177","fix":"193"},{"desc":"179","fix":"194"},{"desc":"181","fix":"195"},{"desc":"190","fix":"196"},{"desc":"185","fix":"197"},{"desc":"177","fix":"198"},{"desc":"179","fix":"199"},{"desc":"181","fix":"200"},{"desc":"190","fix":"201"},{"desc":"185","fix":"202"},"Update the dependencies array to be: [location, setTime, setTimerOn]",{"range":"203","text":"204"},"Update the dependencies array to be: [location, setStartButtonAndNotificationText, unBlurImage]",{"range":"205","text":"206"},"Update the dependencies array to be: [time, location.pathname, setNavBar]",{"range":"207","text":"208"},"Update the dependencies array to be: [clearTimerAndResetColumns, location, setNavBar]",{"range":"209","text":"210"},"Update the dependencies array to be: [setTime, timerOn]",{"range":"211","text":"212"},"Update the dependencies array to be: [setStartButtonAndNotificationText, unBlurImage]",{"range":"213","text":"214"},"Update the dependencies array to be: [circleCoordinates, setStartButtonAndNotificationText, validateWaldo]",{"range":"215","text":"216"},"Update the dependencies array to be: [circleCoordinates, setStartButtonAndNotificationText, validateOdlaw]",{"range":"217","text":"218"},"Update the dependencies array to be: [circleCoordinates, setStartButtonAndNotificationText, validateWhitebeard]",{"range":"219","text":"220"},"Update the dependencies array to be: [odlawFound, waldoFound, whitebeardFound, setTimerOn, time, setStartButtonAndNotificationText, setAllowPopup, addScore]",{"range":"221","text":"222"},"Update the dependencies array to be: [winnerModal, setWinnerModal, setStartButtonAndNotificationText]",{"range":"223","text":"224"},{"range":"225","text":"216"},{"range":"226","text":"218"},{"range":"227","text":"220"},"Update the dependencies array to be: [addScore, odlawFound, setAllowPopup, setStartButtonAndNotificationText, setTimerOn, time, waldoFound, whitebeardFound]",{"range":"228","text":"229"},{"range":"230","text":"224"},{"range":"231","text":"216"},{"range":"232","text":"218"},{"range":"233","text":"220"},{"range":"234","text":"229"},{"range":"235","text":"224"},{"range":"236","text":"216"},{"range":"237","text":"218"},{"range":"238","text":"220"},{"range":"239","text":"229"},{"range":"240","text":"224"},[1389,1399],"[location, setTime, setTimerOn]",[1633,1643],"[location, setStartButtonAndNotificationText, unBlurImage]",[3622,3647],"[time, location.pathname, setNavBar]",[4897,4907],"[clearTimerAndResetColumns, location, setNavBar]",[5184,5193],"[setTime, timerOn]",[1584,1586],"[setStartButtonAndNotificationText, unBlurImage]",[6299,6314],"[circleCoordinates, setStartButtonAndNotificationText, validateWaldo]",[6986,7001],"[circleCoordinates, setStartButtonAndNotificationText, validateOdlaw]",[7708,7728],"[circleCoordinates, setStartButtonAndNotificationText, validateWhitebeard]",[9097,9156],"[odlawFound, waldoFound, whitebeardFound, setTimerOn, time, setStartButtonAndNotificationText, setAllowPopup, addScore]",[10114,10143],"[winnerModal, setWinnerModal, setStartButtonAndNotificationText]",[1763,1778],[2456,2471],[3176,3196],[8609,8650],"[addScore, odlawFound, setAllowPopup, setStartButtonAndNotificationText, setTimerOn, time, waldoFound, whitebeardFound]",[9606,9635],[1775,1790],[2461,2476],[3183,3203],[8537,8578],[9511,9540],[1776,1791],[2464,2479],[3195,3215],[8548,8589],[9522,9551]]