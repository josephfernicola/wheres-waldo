[{"/Users/josephfernicola/the_odin_project/wheres-waldo/src/index.js":"1","/Users/josephfernicola/the_odin_project/wheres-waldo/src/App.js":"2","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/NavBar.js":"3","/Users/josephfernicola/the_odin_project/wheres-waldo/src/RouteSwitch.js":"4","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Beach.js":"5","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Snow.js":"6","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Track.js":"7","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Space.js":"8","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Leaderboards.js":"9"},{"size":667,"mtime":1656784565966,"results":"10","hashOfConfig":"11"},{"size":1095,"mtime":1656972546528,"results":"12","hashOfConfig":"11"},{"size":3826,"mtime":1656981135693,"results":"13","hashOfConfig":"11"},{"size":1320,"mtime":1656981154972,"results":"14","hashOfConfig":"11"},{"size":10287,"mtime":1656992705808,"results":"15","hashOfConfig":"11"},{"size":10271,"mtime":1656992751717,"results":"16","hashOfConfig":"11"},{"size":10619,"mtime":1656992782800,"results":"17","hashOfConfig":"11"},{"size":10295,"mtime":1656992727963,"results":"18","hashOfConfig":"11"},{"size":7263,"mtime":1656978359113,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ugcoa3",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/josephfernicola/the_odin_project/wheres-waldo/src/index.js",[],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/App.js",[],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/NavBar.js",["53","54","55"],[],"import { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport waldo from \"../images/waldoFace.png\";\nimport odlaw from \"../images/odlawFace.png\";\nimport whitebeard from \"../images/whitebeardFace.png\";\nimport logo from \"../images/waldoHomeFace.jpeg\";\n\nfunction NavBar(props) {\n  const { time, setTime, timerOn, setTimerOn } = props;\n  const [navText, setNavText] = useState(\n    <nav className=\"homeNav\">\n      <div className=\"nameLogo\">\n        <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n        <div className=\"logoWhere\">Where's</div>\n        <div className=\"logoWaldo\">Waldo?</div>\n      </div>\n    </nav>\n  );\n  let location = useLocation();\n  const clearTimer = () => {\n    setTimerOn(false);\n    setTime(0);\n  };\n  const setNavBar = () => {\n    return (\n      <nav className=\"nav\">\n        <Link to=\"/wheres-waldo\">\n          <button className=\"returnHome\" onClick={clearTimer}>\n            Return to Home\n          </button>\n        </Link>\n\n        <div className=\"characterContainer\">\n          <div className=\"waldoImageAndName\">\n            <img src={waldo} alt=\"Waldo\"></img>\n            <div>Waldo</div>\n          </div>\n          <div className=\"odlawImageAndName\">\n            <img src={odlaw} alt=\"Odlaw\"></img>\n            <div>Odlaw</div>\n          </div>\n          <div className=\"whitebeardImageAndName\">\n            <img src={whitebeard} alt=\"Whitebeard\"></img>\n            <div>Whitebeard</div>\n          </div>\n        </div>\n        <div className=\"timer\">\n          <div className=\"minutes\">\n            {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m\n          </div>\n          <div>:</div>\n          <div className=\"seconds\">\n            {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s\n          </div>\n          <div>:</div>\n          <div className=\"milli\">{(\"0\" + ((time / 10) % 100)).slice(-2)}ms</div>\n        </div>\n      </nav>\n    );\n  };\n  useEffect(() => {\n    if (\n      location.pathname === \"/beach\" ||\n      location.pathname === \"/snow\" ||\n      location.pathname === \"/space\" ||\n      location.pathname === \"/track\"\n    ) {\n      setNavText(setNavBar);\n    }\n  }, [time]);\n\n  useEffect(() => {\n    if (location.pathname === \"/wheres-waldo\") {\n      setNavText(\n        <nav className=\"homeNav\">\n          <div className=\"nameLogo\">\n            <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n            <div className=\"logoWhere\">Where's</div>\n            <div className=\"logoWaldo\">Waldo?</div>\n          </div>\n        </nav>\n      );\n    } else if (location.pathname === \"/beach\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/snow\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/space\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/track\") {\n      setNavText(setNavBar);\n    } else if (location.pathname === \"/leaderboards\") {\n      setNavText(\n        <nav className=\"leaderboardNav\">\n          <Link to=\"/wheres-waldo\">\n            <button className=\"returnHome\" onClick={clearTimer}>\n              Return to Home\n            </button>\n          </Link>\n          <div className=\"nameLogo\">\n            <img className=\"logo\" src={logo} alt=\"Waldo Logo\"></img>\n            <div className=\"logoWhere\">Where's</div>\n            <div className=\"logoWaldo\">Waldo</div>\n          </div>\n        </nav>\n      );\n    }\n  }, [location]);\n\n  useEffect(() => {\n    let interval = null;\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [timerOn]);\n\n  return <nav className=\"navText\">{navText}</nav>;\n}\n\nexport default NavBar;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/RouteSwitch.js",[],[],"/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Beach.js",["56","57","58","59","60","61","62"],[],"import beach from \"../images/waldo-beach.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\n\nfunction Beach(props) {\n  const { time, setTime, timerOn, setTimerOn } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [allowPopup, setAllowPopup] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 909 &&\n        circleCoordinates[0].left > 871 &&\n        circleCoordinates[1].top < 371 &&\n        circleCoordinates[1].top > 326\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Waldo!</div>\n        );\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 177 &&\n        circleCoordinates[0].left > 135 &&\n        circleCoordinates[1].top < 351 &&\n        circleCoordinates[1].top > 307\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Odlaw!</div>\n        );\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 408 &&\n        circleCoordinates[0].left > 370 &&\n        circleCoordinates[1].top < 351 &&\n        circleCoordinates[1].top > 310\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Whitebeard!</div>\n        );\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWhitebeard]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setNotificationText(\"\");\n    }, 4000);\n  }, [validateWaldo, validateOdlaw, validateWhitebeard]);\n\n  const unBlurImage = (e) => {\n    setTimerOn(true);\n    setAllowPopup(true); //allows people to click image to make guesses\n    const beachImg = e.target.parentElement.lastChild;\n    beachImg.className = \"beachBig\"; //removed the blur\n    const introText = e.target.parentElement.firstChild;\n    introText.remove();\n    e.target.remove();\n  };\n\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      const beachPic = document.querySelector(\".beachBig\");\n      beachPic.className = \"beachBig blur\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addBeachScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" maxlength=\"30\"></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n            <div className=\"tryAgainAndLeaderboard\">\n              <button type=\"button\" className=\"tryAgain\" onClick={refreshPage}>\n                Try Again\n              </button>\n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"beachScores\");\n    if (e.target.children[1].value.length > 0) {\n    addDoc(scoreRef, {\n      name: e.target.children[1].value,\n      time:\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n        \"m : \" +\n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n        \"s : \" +\n        (\"0\" + ((time / 10) % 100)).slice(-2) +\n        \"ms\",\n    });\n    navigate(\"/leaderboards\");\n  }\n  };\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  return (\n    <div>\n      <div className=\"introText\">Find Waldo, Odlaw and Whitebeard!</div>\n      <button className=\"startTimerButton\" onClick={unBlurImage}>\n        Start!\n      </button>\n      <div>{winnerModal}</div>\n      <div className={\"beachBig blur\"} onClick={popUpScreen}>\n        {popupText}\n        {circle}\n        <img src={beach} alt=\"Beach\"></img>\n        <div className=\"notificationText\">{notificationText}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Beach;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Snow.js",["63","64","65","66","67","68","69"],[],"import snow from \"../images/waldo-snow.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\n\nfunction Snow(props) {\n  const { time, setTime, timerOn, setTimerOn } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [allowPopup, setAllowPopup] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setNotificationText(\"\");\n    }, 4000);\n  }, [validateWaldo, validateOdlaw, validateWhitebeard]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 1250 &&\n        circleCoordinates[0].left > 1213 &&\n        circleCoordinates[1].top < 681 &&\n        circleCoordinates[1].top > 641\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Waldo!</div>\n        );\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 477 &&\n        circleCoordinates[0].left > 439 &&\n        circleCoordinates[1].top < 598 &&\n        circleCoordinates[1].top > 563\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Odlaw!</div>\n        );\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      if (\n        circleCoordinates[0].left < 121 &&\n        circleCoordinates[0].left > 82 &&\n        circleCoordinates[1].top < 712 &&\n        circleCoordinates[1].top > 672\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Whitebeard!</div>\n        );\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n\n  const unBlurImage = (e) => {\n    setTimerOn(true);\n    setAllowPopup(true); //allows people to click image to make guesses\n    const snowImg = e.target.parentElement.lastChild;\n    snowImg.className = \"snowBig\"; //removed the blur\n    const introText = e.target.parentElement.firstChild;\n    introText.remove();\n    e.target.remove();\n  };\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      const snowPic = document.querySelector(\".snowBig\");\n      snowPic.className = \"snowBig blur\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addBeachScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" maxlength=\"30\"></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n            <div className=\"tryAgainAndLeaderboard\">\n              <button type=\"button\" className=\"tryAgain\" onClick={refreshPage}>\n                Try Again\n              </button>\n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"snowScores\");\n    if (e.target.children[1].value.length > 0) {\n    addDoc(scoreRef, {\n      name: e.target.children[1].value,\n      time:\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n        \"m : \" +\n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n        \"s : \" +\n        (\"0\" + ((time / 10) % 100)).slice(-2) +\n        \"ms\",\n    });\n    navigate(\"/leaderboards\");\n  }\n  };\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  return (\n    <div>\n      <div className=\"introText\">Find Waldo, Odlaw and Whitebeard!</div>\n      <button className=\"startTimerButton\" onClick={unBlurImage}>\n        Start!\n      </button>\n      <div>{winnerModal}</div>\n      <div className={\"snowBig blur\"} onClick={popUpScreen}>\n        {popupText}\n        {circle}\n        <img src={snow} alt=\"Snow\"></img>\n        <div className=\"notificationText\">{notificationText}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Snow;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Track.js",["70","71","72","73","74","75","76"],[],"import track from \"../images/waldo-track.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n} from \"firebase/firestore\";\n\nfunction Track (props) {\n  const { time, setTime, timerOn, setTimerOn } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [allowPopup, setAllowPopup] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setNotificationText(\"\");\n    }, 4000);\n  }, [validateWaldo, validateOdlaw, validateWhitebeard]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      console.log(\"left\" , circleCoordinates[0].left);\n      console.log(\"top\" , circleCoordinates[1].top)\n      if (\n        circleCoordinates[0].left < 424 &&\n        circleCoordinates[0].left > 385 &&\n        circleCoordinates[1].top < 322 &&\n        circleCoordinates[1].top > 283\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Waldo!</div>\n        );\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      console.log(\"left\" , circleCoordinates[0].left);\n      console.log(\"top\" , circleCoordinates[1].top)\n      if (\n        circleCoordinates[0].left < 885 &&\n        circleCoordinates[0].left > 844 &&\n        circleCoordinates[1].top < 603 &&\n        circleCoordinates[1].top > 565\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Odlaw!</div>\n        );\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n      console.log(\"left\" , circleCoordinates[0].left);\n      console.log(\"top\" , circleCoordinates[1].top)\n      if (\n        circleCoordinates[0].left < 905 &&\n        circleCoordinates[0].left > 864 &&\n        circleCoordinates[1].top < 801 &&\n        circleCoordinates[1].top > 766\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Whitebeard!</div>\n        );\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n\n  const unBlurImage = (e) => {\n    setTimerOn(true);\n    setAllowPopup(true); //allows people to click image to make guesses\n    const trackImg = e.target.parentElement.lastChild;\n    trackImg.className = \"trackBig\"; //removed the blur\n    const introText = e.target.parentElement.firstChild;\n    introText.remove();\n    e.target.remove();\n  };\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      const spacePic = document.querySelector(\".trackBig\");\n      spacePic.className = \"trackBig blur\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addBeachScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" maxlength=\"30\"></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n            <div className=\"tryAgainAndLeaderboard\">\n              <button type=\"button\" className=\"tryAgain\" onClick={refreshPage}>\n                Try Again\n              </button>\n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"trackScores\");\n    if (e.target.children[1].value.length > 0) {\n    addDoc(scoreRef, {\n      name: e.target.children[1].value,\n      time:\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n        \"m : \" +\n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n        \"s : \" +\n        (\"0\" + ((time / 10) % 100)).slice(-2) +\n        \"ms\",\n    });\n    navigate(\"/leaderboards\");\n  }\n  };\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  return (\n    <div>\n      <div className=\"introText\">Find Waldo, Odlaw and Whitebeard!</div>\n      <button className=\"startTimerButton\" onClick={unBlurImage}>\n        Start!\n      </button>\n      <div>{winnerModal}</div>\n      <div className={\"trackBig blur\"} onClick={popUpScreen}>\n        {popupText}\n        {circle}\n        <img src={track} alt=\"Space\"></img>\n        <div className=\"notificationText\">{notificationText}</div>\n      </div>\n    </div>\n  );\n}\nexport default Track;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Space.js",["77","78","79","80","81","82","83"],[],"import space from \"../images/waldo-space.jpeg\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n} from \"firebase/firestore\";\n\nfunction Space (props) {\n  const { time, setTime, timerOn, setTimerOn } = props;\n  const [popup, setPopup] = useState(true);\n  const [popupText, setPopupText] = useState(\"\");\n  const [circle, setCircle] = useState(\"\");\n  const [circleCoordinates, setCircleCoordinates] = useState([]);\n  const [validateWaldo, setValidateWaldo] = useState(false);\n  const [validateOdlaw, setValidateOdlaw] = useState(false);\n  const [validateWhitebeard, setValidateWhitebeard] = useState(false);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [allowPopup, setAllowPopup] = useState(false);\n  const [waldoFound, setWaldoFound] = useState(false);\n  const [odlawFound, setOdlawFound] = useState(false);\n  const [whitebeardFound, setWhitebeardFound] = useState(false);\n  const [winnerModal, setWinnerModal] = useState(\"\");\n  let location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setNotificationText(\"\");\n    }, 4000);\n  }, [validateWaldo, validateOdlaw, validateWhitebeard]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 605 &&\n        circleCoordinates[0].left > 561 &&\n        circleCoordinates[1].top < 611 &&\n        circleCoordinates[1].top > 571\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Waldo!</div>\n        );\n        const waldoImg =\n          document.querySelector(\".waldoImageAndName\").firstChild;\n        waldoImg.className = \"greyOut\";\n        setWaldoFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWaldo]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 122 &&\n        circleCoordinates[0].left > 81 &&\n        circleCoordinates[1].top < 673 &&\n        circleCoordinates[1].top > 634\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Odlaw!</div>\n        );\n        const odlawImg =\n          document.querySelector(\".odlawImageAndName\").firstChild;\n        odlawImg.className = \"greyOut\";\n        setOdlawFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateOdlaw]);\n\n  useEffect(() => {\n    if (circleCoordinates.length === 2) {\n\n      if (\n        circleCoordinates[0].left < 1145 &&\n        circleCoordinates[0].left > 1106 &&\n        circleCoordinates[1].top < 568 &&\n        circleCoordinates[1].top > 529\n      ) {\n        setNotificationText(\n          <div className=\"correctNotification\">Found Whitebeard!</div>\n        );\n        const whitebeardImg = document.querySelector(\n          \".whitebeardImageAndName\"\n        ).firstChild;\n        whitebeardImg.className = \"greyOut\";\n        setWhitebeardFound(true);\n      } else {\n        setNotificationText(\n          <div className=\"wrongNotification\">Try Again!</div>\n        );\n      }\n    }\n  }, [validateWhitebeard]);\n\n  const popUpScreen = (e) => {\n    if (allowPopup) {\n      setPopup((prevPopup) => !prevPopup);\n      if (popup) {\n        const circleX = { left: e.pageX };\n        const circleY = { top: e.pageY };\n        setCircleCoordinates([circleX, circleY]);\n        const popupX = { left: e.pageX + 10 };\n        const popupY = { top: e.pageY + 10 };\n        if (!waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && !whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div\n                onClick={switchValidateWhitebeard}\n                className=\"whitebeardText\"\n              >\n                Whitebeard\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"singlePopup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n            </div>\n          );\n        } else if (!waldoFound && !odlawFound && whitebeardFound) {\n          setPopupText(\n            <div className=\"popup\" style={{ ...popupX, ...popupY }}>\n              <div onClick={switchValidateWaldo} className=\"waldoText\">\n                Waldo\n              </div>\n              <div onClick={switchValidateOdlaw} className=\"odlawText\">\n                Odlaw\n              </div>\n            </div>\n          );\n        }\n\n        setCircle(\n          <div className=\"circle\" style={{ ...circleX, ...circleY }}></div>\n        );\n      } else {\n        setPopupText(\"\");\n        setCircle(\"\");\n      }\n    }\n  };\n\n  const switchValidateWaldo = () => {\n    //switch between true and false to check for character on every click\n    setValidateWaldo((prevValue) => !prevValue);\n  };\n  const switchValidateOdlaw = () => {\n    //switch between true and false to check for character on every click\n    setValidateOdlaw((prevValue) => !prevValue);\n  };\n  const switchValidateWhitebeard = () => {\n    //switch between true and false to check for character on every click\n    setValidateWhitebeard((prevValue) => !prevValue);\n  };\n\n  const unBlurImage = (e) => {\n    setTimerOn(true);\n    setAllowPopup(true); //allows people to click image to make guesses\n    const snowImg = e.target.parentElement.lastChild;\n    snowImg.className = \"spaceBig\"; //removed the blur\n    const introText = e.target.parentElement.firstChild;\n    introText.remove();\n    e.target.remove();\n  };\n  useEffect(() => {\n    //when all three are found\n    if (odlawFound && waldoFound && whitebeardFound) {\n      setTimerOn(false);\n      setAllowPopup(false);\n      const spacePic = document.querySelector(\".spaceBig\");\n      spacePic.className = \"spaceBig blur\";\n      setWinnerModal(\n        <div className=\"winnerModal\">\n          <div className=\"winnerTime\">\n            <span>You found all characters in</span>\n            <span>\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}m :\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}s :\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}ms\n            </span>\n          </div>\n          <div className=\"winnerNameInput\">\n            <form className=\"addBeachScore\" onSubmit={addScore}>\n              <label htmlFor=\"name\"></label>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" maxlength=\"30\"></input>\n              <button type=\"submit\" className=\"submitScoreButton\">\n                Add Score\n              </button>\n            </form>\n            <div className=\"tryAgainAndLeaderboard\">\n              <button type=\"button\" className=\"tryAgain\" onClick={refreshPage}>\n                Try Again\n              </button>\n              <Link to=\"/leaderboards\">\n                <button className=\"leaderboardButton\">View Leaderboards</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }, [odlawFound, waldoFound, whitebeardFound]);\n\n  const addScore = (e) => {\n    e.preventDefault();\n    const allScores = getFirestore();\n    const scoreRef = collection(allScores, \"spaceScores\");\n    if (e.target.children[1].value.length > 0) {\n    addDoc(scoreRef, {\n      name: e.target.children[1].value,\n      time:\n        (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\n        \"m : \" +\n        (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) +\n        \"s : \" +\n        (\"0\" + ((time / 10) % 100)).slice(-2) +\n        \"ms\",\n    });\n    navigate(\"/leaderboards\");\n  }\n  };\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  return (\n    <div>\n      <div className=\"introText\">Find Waldo, Odlaw and Whitebeard!</div>\n      <button className=\"startTimerButton\" onClick={unBlurImage}>\n        Start!\n      </button>\n      <div>{winnerModal}</div>\n      <div className={\"spaceBig blur\"} onClick={popUpScreen}>\n        {popupText}\n        {circle}\n        <img src={space} alt=\"Space\"></img>\n        <div className=\"notificationText\">{notificationText}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Space;\n","/Users/josephfernicola/the_odin_project/wheres-waldo/src/components/Leaderboards.js",["84","85","86","87","88","89","90"],[],"import beach from \"../images/waldo-beach.jpeg\";\nimport snow from \"../images/waldo-snow.jpeg\";\nimport space from \"../images/waldo-space.jpeg\";\nimport track from \"../images/waldo-track.jpeg\";\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\nimport { useState, useEffect } from \"react\";\n\nfunction Leaderboards() {\n  const [beachScores, setBeachScores] = useState(true);\n  const [snowScores, setSnowScores] = useState(false);\n  const [spaceScores, setSpaceScores] = useState(false);\n  const [trackScores, setTrackScores] = useState(false);\n  const [currentDisplayScores, setCurrentDisplayScores] = useState([]);\n  const [beachDisplay, setBeachDisplay] = useState(true);\n  const [spaceDisplay, setSpaceDisplay] = useState(false);\n  const [snowDisplay, setSnowDisplay] = useState(false);\n  const [trackDisplay, setTrackDisplay] = useState(false);\n\n  const allScores = getFirestore();\n\n  //whenever new image is clicked, changing display to show those scores\n  useEffect(() => {\n    if (beachScores) {\n      const beachScoreRef = collection(allScores, \"beachScores\");\n      getDocs(beachScoreRef)\n        .then((snapshot) => {\n          let scores = [];\n          snapshot.docs.forEach((doc) => {\n            scores.push({ ...doc.data(), id: doc.id });\n          });\n          setCurrentDisplayScores(scores);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n      {\n        currentDisplayScores.map((arr) => {\n          return (\n            <div key={arr.id}>\n              <div className=\"nameAndTime\">\n                <div>{arr.name}</div>\n                <div>{arr.time}</div>\n              </div>\n            </div>\n          );\n        });\n      }\n    } else if (snowScores) {\n      const snowScoreRef = collection(allScores, \"snowScores\");\n      getDocs(snowScoreRef)\n        .then((snapshot) => {\n          let scores = [];\n          snapshot.docs.forEach((doc) => {\n            scores.push({ ...doc.data(), id: doc.id });\n          });\n          setCurrentDisplayScores(scores);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n      {\n        currentDisplayScores.map((arr) => {\n          return (\n            <div key={arr.id}>\n              <div className=\"nameAndTime\">\n                <div>{arr.name}</div>\n                <div>{arr.time}</div>\n              </div>\n            </div>\n          );\n        });\n      }\n    } else if (spaceScores) {\n      const spaceScoreRef = collection(allScores, \"spaceScores\");\n      getDocs(spaceScoreRef)\n        .then((snapshot) => {\n          let scores = [];\n          snapshot.docs.forEach((doc) => {\n            scores.push({ ...doc.data(), id: doc.id });\n          });\n          setCurrentDisplayScores(scores);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n      {\n        currentDisplayScores.map((arr) => {\n          return (\n            <div key={arr.id}>\n              <div className=\"nameAndTime\">\n                <div>{arr.name}</div>\n                <div>{arr.time}</div>\n              </div>\n            </div>\n          );\n        });\n      }\n    } else if (trackScores) {\n      const trackScoreRef = collection(allScores, \"trackScores\");\n      getDocs(trackScoreRef)\n        .then((snapshot) => {\n          let scores = [];\n          snapshot.docs.forEach((doc) => {\n            scores.push({ ...doc.data(), id: doc.id });\n          });\n          setCurrentDisplayScores(scores);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n      {\n        currentDisplayScores.map((arr) => {\n          return (\n            <div key={arr.id}>\n              <div className=\"nameAndTime\">\n                <div>{arr.name}</div>\n                <div>{arr.time}</div>\n              </div>\n            </div>\n          );\n        });\n      }\n    }\n  }, [beachScores, spaceScores, snowScores, trackScores]);\n\n  //alternate between true and false to change display page\n  const changeBoardDisplayToBeach = (e) => {\n    setBeachScores(true);\n    setSnowScores(false);\n    setSpaceScores(false);\n    setTrackScores(false);\n  };\n  const changeBoardDisplayToSnow = () => {\n    setBeachScores(false);\n    setSnowScores(true);\n    setSpaceScores(false);\n    setTrackScores(false);\n  };\n  const changeBoardDisplayToSpace = () => {\n    setBeachScores(false);\n    setSnowScores(false);\n    setSpaceScores(true);\n    setTrackScores(false);\n  };\n  const changeBoardDisplayToTrack = () => {\n    setBeachScores(false);\n    setSnowScores(false);\n    setSpaceScores(false);\n    setTrackScores(true);\n  };\n\n  useEffect(() => {\n    if (beachScores) {\n      setBeachDisplay(true);\n      setSnowDisplay(false);\n      setSpaceDisplay(false);\n      setTrackDisplay(false);\n    } else if (spaceScores) {\n      setSpaceDisplay(true);\n      setSnowDisplay(false);\n      setBeachDisplay(false);\n      setTrackDisplay(false);\n    } else if (snowScores) {\n      setSnowDisplay(true);\n      setBeachDisplay(false);\n      setSpaceDisplay(false);\n      setTrackDisplay(false);\n    } else if (trackScores) {\n      setTrackDisplay(true);\n      setSnowDisplay(false);\n      setSpaceDisplay(false);\n      setBeachDisplay(false);\n    }\n  }, [snowScores, beachScores, spaceScores, trackScores]);\n\n  function sortScores(array) {\n    return array.sort(function (a, b) {\n      return a - b;\n    });\n  }\n  useEffect(() => {\n    //find out how to sort the array and return back to display\n    let timeArray = [];\n    currentDisplayScores.map((item) => {\n      timeArray.push(item.time);\n    });\n    //console.log(\"array\" , timeArray)\n    //console.log(\"sorted\" , sortScores(timeArray))\n  }, [currentDisplayScores]);\n  return (\n    <div>\n      <ul className=\"leaderboardDisplay\">\n        <li className=\"leaderboardBeach\" onClick={changeBoardDisplayToBeach}>\n          <img\n            src={beach}\n            alt=\"Beach\"\n            className={beachDisplay ? \"shadow\" : \"hidden\"}\n          ></img>\n        </li>\n        <li className=\"leaderboardSnow\" onClick={changeBoardDisplayToSnow}>\n          <img\n            src={snow}\n            alt=\"Snow\"\n            className={snowDisplay ? \"shadow\" : \"hidden\"}\n          ></img>\n        </li>\n        <li className=\"leaderboardSpace\" onClick={changeBoardDisplayToSpace}>\n          <img\n            src={space}\n            alt=\"Space\"\n            className={spaceDisplay ? \"shadow\" : \"hidden\"}\n          ></img>\n        </li>\n\n        <li className=\"leaderboardTrack\" onClick={changeBoardDisplayToTrack}>\n          <img\n            src={track}\n            alt=\"Track\"\n            className={trackDisplay ? \"shadow\" : \"hidden\"}\n          ></img>\n        </li>\n      </ul>\n      <div className=\"boardTitles\">\n        <div className=\"leaderboardNameTitle\">Name</div>\n        <div className=\"leaderboardTimeTitle\">Time</div>\n      </div>\n      <div className=\"leaderboardContainer\">\n        {currentDisplayScores.map((arr) => {\n          return (\n            <div key={arr.id} className=\"eachNameAndTime\">\n              <div className=\"nameAndTime\">\n                <div>{arr.name}</div>\n                <div>{arr.time}</div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Leaderboards;\n",{"ruleId":"91","severity":1,"message":"92","line":71,"column":6,"nodeType":"93","endLine":71,"endColumn":12,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":108,"column":6,"nodeType":"93","endLine":108,"endColumn":16,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"97","line":122,"column":6,"nodeType":"93","endLine":122,"endColumn":15,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":7,"column":17,"nodeType":"101","messageId":"102","endLine":7,"endColumn":24},{"ruleId":"99","severity":1,"message":"103","line":7,"column":26,"nodeType":"101","messageId":"102","endLine":7,"endColumn":33},{"ruleId":"99","severity":1,"message":"104","line":21,"column":7,"nodeType":"101","messageId":"102","endLine":21,"endColumn":15},{"ruleId":"91","severity":1,"message":"105","line":162,"column":6,"nodeType":"93","endLine":162,"endColumn":21,"suggestions":"106"},{"ruleId":"91","severity":1,"message":"105","line":185,"column":6,"nodeType":"93","endLine":185,"endColumn":21,"suggestions":"107"},{"ruleId":"91","severity":1,"message":"105","line":210,"column":6,"nodeType":"93","endLine":210,"endColumn":26,"suggestions":"108"},{"ruleId":"91","severity":1,"message":"109","line":265,"column":6,"nodeType":"93","endLine":265,"endColumn":47,"suggestions":"110"},{"ruleId":"99","severity":1,"message":"100","line":7,"column":17,"nodeType":"101","messageId":"102","endLine":7,"endColumn":24},{"ruleId":"99","severity":1,"message":"103","line":7,"column":26,"nodeType":"101","messageId":"102","endLine":7,"endColumn":33},{"ruleId":"99","severity":1,"message":"104","line":21,"column":7,"nodeType":"101","messageId":"102","endLine":21,"endColumn":15},{"ruleId":"91","severity":1,"message":"105","line":51,"column":6,"nodeType":"93","endLine":51,"endColumn":21,"suggestions":"111"},{"ruleId":"91","severity":1,"message":"105","line":74,"column":6,"nodeType":"93","endLine":74,"endColumn":21,"suggestions":"112"},{"ruleId":"91","severity":1,"message":"105","line":98,"column":6,"nodeType":"93","endLine":98,"endColumn":26,"suggestions":"113"},{"ruleId":"91","severity":1,"message":"109","line":263,"column":6,"nodeType":"93","endLine":263,"endColumn":47,"suggestions":"114"},{"ruleId":"99","severity":1,"message":"100","line":11,"column":17,"nodeType":"101","messageId":"102","endLine":11,"endColumn":24},{"ruleId":"99","severity":1,"message":"103","line":11,"column":26,"nodeType":"101","messageId":"102","endLine":11,"endColumn":33},{"ruleId":"99","severity":1,"message":"104","line":25,"column":7,"nodeType":"101","messageId":"102","endLine":25,"endColumn":15},{"ruleId":"91","severity":1,"message":"105","line":57,"column":6,"nodeType":"93","endLine":57,"endColumn":21,"suggestions":"115"},{"ruleId":"91","severity":1,"message":"105","line":82,"column":6,"nodeType":"93","endLine":82,"endColumn":21,"suggestions":"116"},{"ruleId":"91","severity":1,"message":"105","line":108,"column":6,"nodeType":"93","endLine":108,"endColumn":26,"suggestions":"117"},{"ruleId":"91","severity":1,"message":"109","line":273,"column":6,"nodeType":"93","endLine":273,"endColumn":47,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"100","line":11,"column":17,"nodeType":"101","messageId":"102","endLine":11,"endColumn":24},{"ruleId":"99","severity":1,"message":"103","line":11,"column":26,"nodeType":"101","messageId":"102","endLine":11,"endColumn":33},{"ruleId":"99","severity":1,"message":"104","line":25,"column":7,"nodeType":"101","messageId":"102","endLine":25,"endColumn":15},{"ruleId":"91","severity":1,"message":"105","line":56,"column":6,"nodeType":"93","endLine":56,"endColumn":21,"suggestions":"119"},{"ruleId":"91","severity":1,"message":"105","line":80,"column":6,"nodeType":"93","endLine":80,"endColumn":21,"suggestions":"120"},{"ruleId":"91","severity":1,"message":"105","line":105,"column":6,"nodeType":"93","endLine":105,"endColumn":26,"suggestions":"121"},{"ruleId":"91","severity":1,"message":"109","line":270,"column":6,"nodeType":"93","endLine":270,"endColumn":47,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":36,"column":7,"nodeType":"125","messageId":"126","endLine":47,"endColumn":8},{"ruleId":"123","severity":1,"message":"124","line":61,"column":7,"nodeType":"125","messageId":"126","endLine":72,"endColumn":8},{"ruleId":"123","severity":1,"message":"124","line":86,"column":7,"nodeType":"125","messageId":"126","endLine":97,"endColumn":8},{"ruleId":"123","severity":1,"message":"124","line":111,"column":7,"nodeType":"125","messageId":"126","endLine":122,"endColumn":8},{"ruleId":"91","severity":1,"message":"127","line":124,"column":6,"nodeType":"93","endLine":124,"endColumn":57,"suggestions":"128"},{"ruleId":"99","severity":1,"message":"129","line":176,"column":12,"nodeType":"101","messageId":"102","endLine":176,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":184,"column":37,"nodeType":"132","messageId":"133","endLine":184,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.pathname' and 'setNavBar'. Either include them or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has missing dependencies: 'clearTimer' and 'setNavBar'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'setTime'. Either include it or remove the dependency array.",["136"],"no-unused-vars","'setTime' is assigned a value but never used.","Identifier","unusedVar","'timerOn' is assigned a value but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'circleCoordinates'. Either include it or remove the dependency array.",["137"],["138"],["139"],"React Hook useEffect has missing dependencies: 'addScore', 'setTimerOn', and 'time'. Either include them or remove the dependency array.",["140"],["141"],["142"],["143"],["144"],["145"],["146"],["147"],["148"],["149"],["150"],["151"],["152"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'allScores' and 'currentDisplayScores'. Either include them or remove the dependency array.",["153"],"'sortScores' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"160","fix":"168"},{"desc":"162","fix":"169"},{"desc":"164","fix":"170"},{"desc":"166","fix":"171"},{"desc":"160","fix":"172"},{"desc":"162","fix":"173"},{"desc":"164","fix":"174"},{"desc":"166","fix":"175"},{"desc":"160","fix":"176"},{"desc":"162","fix":"177"},{"desc":"164","fix":"178"},{"desc":"166","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [location.pathname, setNavBar, time]",{"range":"182","text":"183"},"Update the dependencies array to be: [clearTimer, location, setNavBar]",{"range":"184","text":"185"},"Update the dependencies array to be: [setTime, timerOn]",{"range":"186","text":"187"},"Update the dependencies array to be: [circleCoordinates, validateWaldo]",{"range":"188","text":"189"},"Update the dependencies array to be: [circleCoordinates, validateOdlaw]",{"range":"190","text":"191"},"Update the dependencies array to be: [circleCoordinates, validateWhitebeard]",{"range":"192","text":"193"},"Update the dependencies array to be: [addScore, odlawFound, setTimerOn, time, waldoFound, whitebeardFound]",{"range":"194","text":"195"},{"range":"196","text":"189"},{"range":"197","text":"191"},{"range":"198","text":"193"},{"range":"199","text":"195"},{"range":"200","text":"189"},{"range":"201","text":"191"},{"range":"202","text":"193"},{"range":"203","text":"195"},{"range":"204","text":"189"},{"range":"205","text":"191"},{"range":"206","text":"193"},{"range":"207","text":"195"},"Update the dependencies array to be: [beachScores, spaceScores, snowScores, trackScores, allScores, currentDisplayScores]",{"range":"208","text":"209"},[2208,2214],"[location.pathname, setNavBar, time]",[3449,3459],"[clearTimer, location, setNavBar]",[3736,3745],"[setTime, timerOn]",[5818,5833],"[circleCoordinates, validateWaldo]",[6490,6505],"[circleCoordinates, validateOdlaw]",[7198,7218],"[circleCoordinates, validateWhitebeard]",[9155,9196],"[addScore, odlawFound, setTimerOn, time, waldoFound, whitebeardFound]",[1923,1938],[2595,2610],[3301,3321],[9144,9185],[2039,2054],[2818,2833],[3632,3652],[9488,9529],[1933,1948],[2605,2620],[3315,3335],[9163,9204],[3867,3918],"[beachScores, spaceScores, snowScores, trackScores, allScores, currentDisplayScores]"]